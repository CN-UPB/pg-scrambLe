$schema: "http://json-schema.org/draft-04/schema#"
title: "Network Service Descriptor Schema"
version: 0.9
description: "The core schema for network service descriptors (supports recursive network services)"


# definitions used later
definitions:
  connection_point_types:
    enum:
      - "internal"
      - "external"
      - "management"
  interfaces:
    enum:
      - "ethernet"
      - "ipv4"
      - "ipv6"
  connection_points:
    description: "The connection points of a VDU, CDU, PDU or complete VNF. Connects it to other units or the external world."
    type: "array"
    items:
      type: "object"
      properties:
        # id is the only required attribute
        id:
          description: "A VNF-unique id of the connection point. Can be used for references."
          type: "string"
        mac:
          description: "MAC address of the connection point"
          type: "string"
        ip:
          description: "IP address of the connection point"
          type: "string"
        port:
          description: "For CUDs only: Port of the container's connection point."
          type: "integer"
        interface:
          description: "The type of connection point, such as a virtual port, a virtual NIC address, a physical port, a physcial NIC address, or the endpoint of a VPN tunnel."
          $ref: "#/definitions/interfaces"
        type:
          description: "The type of the connection point with respect to its visibility in the service platform"
          $ref: "#/definitions/connection_point_types"
        # TODO: Remove? Cyclic reference with virtual_links?
        virtual_link_reference:
          description: "A reference to a virtual link, i.e. the virtual_links:id."
          type: "string"
        security_groups:
          description: "List of security groups assigned to the connection point"
          type: "array"
          items:
            type: "string"
        # QoS requirements: either policy name or explicit requirements
        qos:
          description: "Name of a pre-defined QoS policy"
          type: "string"
        qos_requirements:
          description: "Explicit QoS requirements supported by OpenStack"
          type: "object"
          properties:
            # currently three supported QoS requirements
            bandwidth_limit:
              description: "Bandwidth limitations on networks, ports or floating IPs"
              type: "object"
              properties:
                bandwidth:
                  type: "number"
                bandwidth_unit:
                  $ref: "#/definitions/bandwidth_units"
              additionalProperties: false
            minimum_bandwidth:
              description: "Minimum bandwidth constraints on certain types of traffic"
              type: "object"
              properties:
                bandwidth:
                  type: "number"
                bandwidth_unit:
                  $ref: "#/definitions/bandwidth_units"
              additionalProperties: false
            dscp_marking:
              description: "Marking network traffic with a DSCP value"
              type: "string"
          additionalProperties: false
      required:
        - id
      minItems: 1
      uniqueItems: true
      additionalProperties: false
      
  network_functions: 
    description: "The VNFs (their descriptors), that are part of this network service."
    type: "array"
    items: 
      type: "object"
      properties:
        vnf_id:
          description: "A unique identifier of this network function within the scope of this NS descriptor."
          type: "string"
        vnf_vendor:
          description: "The vendor id identifies the VNF descriptor uniquely across all function descriptors."
          type: "string"
          pattern: "^[a-z0-9\\-_.]+$"
        vnf_name:
          description: "The name of the function description."
          type: "string"
          pattern: "^[a-z0-9\\-_.]+$"
        vnf_version:
          description: "The version of the function descriptor."
          type: "string"
          pattern: "^(== |>= |<= |!= )?[0-9\\-_.]+$"
        vnf_flavour:
          description: "Name of deployment flavour to be used (if any)."
          type: "string"
        description:
          description: "A longer description of the network function."
          type: "string"
      required:
        - vnf_id
        - vnf_vendor
        - vnf_name
        - vnf_version
      additionalProperties: false
    minItems: 1
    uniqueItems: true
    # why unique? What if I want to add the same VNF twice? Eg, to measure traffic before and after traversal of other VNFs.
    
  network_services:
    description: "The recursive NSs (their descriptors), that are part of this network service."
    type: "array"
    items: 
      type: "object"
      properties:
        ns_id:
          description: "A unique identifier of the referenced network service within the scope of this NS descriptor."
          type: "string"
        ns_vendor:
          description: "The vendor id identifies the NS descriptor uniquely across all function descriptors."
          type: "string"
          pattern: "^[a-z0-9\\-_.]+$"
        ns_name:
          description: "The name of the referenced NS description."
          type: "string"
          pattern: "^[a-z0-9\\-_.]+$"
        ns_version:
          description: "The version of the referenced NS description."
          type: "string"
          pattern: "^(== |>= |<= |!= )?[0-9\\-_.]+$"
        description:
          description: "A longer description of the network service."
          type: "string"
      required:
        - ns_id
        - ns_vendor
        - ns_name
        - ns_version
      additionalProperties: false
    minItems: 1
    uniqueItems: true
    
  virtual_links: 
    type: "array"
    items:
      type: "object"
      oneOf:
        - description: "A reference to an external virtual link descriptor (VLD)."
          type: "object"
          properties:
            vl_group:
              type: "string"
            vl_name:
              type: "string"
            vl_version:
              type: "string"
            vl_description:
              type: "string"
          required:
            - vl_group
            - vl_name
            - vl_version
          additionalProperties: false
        - description: "A full-featured virtual link description."
          type: "object"
          properties:
            id:
              type: "string"
            connectivity_type: 
              enum:
                - "E-Line" # Point-to-point
                - "E-Tree" # Point-to-multipoint
                - "E-LAN"  # Multipoint-to-multipoint
            connection_points_reference:
              type: "array"
              items:
                description: "The connection point reference has to uniquely reference the connection point of the VNF/NS. To this end, it should name the vnf_id of the network_function/ns_id of the network_services section and the name of the connection point of this VNF/NS as specified in the VNFD/NSD."
                type: "string"
                minItems: 2
                uniqueItems: true
            access:
              type: "boolean"
            external_access:
              type: "boolean"
            root_requirement:
              type: "string"
            leaf_requirement:
              type: "string"
            dhcp:
              type: "boolean"
            cidr:
              type: "string"
            # QoS requirements: either policy name or explicit requirements. If specified at a vLink, the QoS req. will be applied to all corresponding connection points.
            qos:
              description: "Name of a pre-defined QoS policy"
              type: "string"
            qos_requirements:
              description: "Explicit QoS requirements supported by OpenStack"
              type: "object"
              properties:
                # currently three supported QoS requirements
                bandwidth_limit:
                  description: "Bandwidth limitations on networks, ports or floating IPs"
                  type: "object"
                  properties:
                    bandwidth:
                      type: "number"
                    bandwidth_unit:
                      $ref: "#/definitions/bandwidth_units"
                  additionalProperties: false
                minimum_bandwidth:
                  description: "Minimum bandwidth constraints on certain types of traffic"
                  type: "object"
                  properties:
                    bandwidth:
                      type: "number"
                    bandwidth_unit:
                      $ref: "#/definitions/bandwidth_units"
                  additionalProperties: false
                dscp_marking:
                  description: "Marking network traffic with a DSCP value"
                  type: "string"
              additionalProperties: false
          required:
            - id
            - connectivity_type
            - connection_points_reference
          additionalProperties: false
          
  forwarding_graphs:
    description: "The forwarding graph."
    type: "array"
    items:
      type: "object"
      oneOf:
        - description: "A reference to an external forwarding graph descriptor (VNFFGD)."
          type: "object"
          properties:
            fg_group: 
              type: "string"
            fg_name:
              type: "string"
            fg_version:
              type: "string"
            fg_description:
              type: "string"
          required:
            - fg_group
            - fg_name
            - fg_version
          additionalProperties: false
        - description: "A full-featured forwarding graph description."
          type: "object"
          properties:
            fg_id:
              description: "A unique identifier of this forwarding graph within the scope of this NS descriptor."
              type: "string"
            number_of_endpoints: 
              type: "integer"
            number_of_virtual_links: 
              type: "integer"
            constituent_virtual_links: 
              type: "array"
              items: 
                - type: "string"
            constituent_vnfs: 
              type: "array"
              items: 
                - type: "string"
            constituent_services: 
              type: "array"
              items: 
                - type: "string"
            network_forwarding_paths: 
              type: "array"
              items: 
                type: "object"
                properties: 
                  fp_id: 
                    type: "string"
                  policy:
                    type: "string"
                  connection_points: 
                    type: "array"
                    items: 
                      type: "object"
                      properties:
                        connection_point_ref:
                          description: "A connection point reference, referenced by a connection point id."
                          type: "string"
                        position:
                          description: "The possition of the connection point with the forwarding graph"
                          type: "integer"
          required:
            - fg_id
type: "object"
properties:
  descriptor_schema:
    description: "Reference to the schema corresponding to the descriptor (e.g., URL or local path)."
    type: "string"
  vendor:
    description: "The vendor id allows to identify a VNF descriptor uniquely across all function descriptor vendors."
    type: "string"
    pattern: "^[a-z0-9\\-_.]+$"
  name: 
    description: "The name of the network service description."
    type: "string"
    pattern: "^[a-z0-9\\-_.]+$"
  version: 
    description: "The version of the service descriptor."
    type: "string"
    pattern: "^[0-9\\-_.]+$"
  author:
    description: "The person or organization that created the NS descriptor."
    type: "string"
  description:
    description: "A longer description of the network service."
    type: "string"
  logo:
    description: "Path to service logo."
    type: "string"
    pattern: "^[A-Za-z0-9\\-_./]+$"
  licences:
    description: "Information on the licence of this NSD."
    type: "array"
    items:
      anyOf:
        - type: "object"
          properties:
            type:
              description: "The type of licence, 'public' in this case."
              type: "string"
              enum:
              - "public"
          required:
            - "type"
          additionalProperties: False
        - type: "object"
          properties:
            type:
              description: "The type of licence, 'private' in this case."
              type: "string"
              enum:
              - "private"
            url:
              description: "The URL to the licence file."
              type: "string"
          required:
            - "type"
            - "url"
          additionalProperties: False
    additionalItems: False
    uniqueItems: True
  service_specific_managers:
    description: "A list of SSMs used to manage this network service."
    type: "array"
    items: 
      description: "An SSM object of this VNF. FSMs are always Docker containers."
      type: "object"
      properties:
        description:
          description: "An arbitrary description of the FSM."
          type: "string"
        id:
          description: "A unique identifier of this FSM within the scope of this VNF descriptor."
          type: "string"
        image:
          description: "The reference to a Docker image."
          type: "string"
        image_md5:
          description: "An MD5 hash of the Docker image."
          type: "string"
          pattern: "^[A-Fa-f0-9]{32}$"
        resource_requirements:
          description: "The requirements for the Docker environment that runs the FSM."
          type: "object"
          properties:
            docker_version:
              description: "The version of Docker needed for this FSM."
              type: "string"
              pattern: "^(== |>= |<= |!= )?[0-9\\-_.]+$"
        options:
          description: "The options as key-value parameters that are passed to the Docker container. Can be used to configure the Docker."
          type: "array"
          items:
            description: "A key-value parameter object."
            type: "object"
            properties:
              key:
                type: "string"
              value:
                type: "string"
            required:
              - key
              - value
            additionalProperties: False
          uniqueItems: True
      required:
        - id
        - image
      additionalProperties: False
    uniqueItems: True
    minItems: 0
  network_functions:
    $ref: "#/definitions/network_functions"
  network_services:
    $ref: "#/definitions/network_services"
  connection_points:
    $ref: "#/definitions/connection_points"
  virtual_links:
    $ref: "#/definitions/virtual_links"
  forwarding_graphs:
    $ref: "#/definitions/forwarding_graphs"
  lifecycle_events: 
    type: "object"
    properties: 
      start: 
        type: "array"
        items: 
          type: "object"
          properties: 
            vnf_id: 
              type: "string"
            vnf_event: 
              type: "string"
      stop: 
        type: "array"
        items: 
          type: "object"
          properties: 
            vnf_id: 
              type: "string"
            vnf_event: 
              type: "string"
      scale_out: 
        type: "array"
        items: 
          type: "object"
          properties: 
            vnf_id: 
              type: "string"
            vnf_event: 
              type: "string"
  vnf_depedency: 
    type: "array"
    items: 
      type: "string"
    minItems: 0
    uniqueItems: True
  services_depedency: 
    type: "array"
    items: 
      type: "string"
    minItems: 0
    uniqueItems: True
  monitoring_parameters: 
    type: "array"
    items: 
      - type: "object"
        properties: 
          desc: 
            type: "string"
          metric: 
            type: "string"
          unit: 
            type: "string"
  auto_scale_policy: 
    type: "object"
    properties: 
      criteria: 
        type: "array"
        items: 
          - type: "object"
            properties: 
              end-to-end bandwidth: 
                type: "string"
      action: 
        type: "string"
        
  # tags to select network service for correct tests later (eg, latency tests)
  testing_tags:
    type: "array"
    items:
      type: "string"
    uniqueItems: True
    
  # soft constraints by developer, eg, proximity constraints
  # so far only proximity or affinity constraints with exactly 2 involved actors
  soft_constraints:
    type: "array"
    uniqueItems: True
    items:
      type: "object"
      properties:
        objective:
          type: "string"
          pattern: "(proximity)|(affinity)"
        involved_actors:
          type: "array"
          minItems: 2
          maxItems: 2
          items:
            type: "string"
            
  # deployment flavours: copied and adjusted fields using different VNFs of different flavours
  deployment_flavours:
    type: "array"
    uniqueItems: True
    items:
      type: "object"
      properties:
        network_functions:
          $ref: "#/definitions/network_functions"
        network_services:
          $ref: "#/definitions/network_services"
        connection_points:
          $ref: "#/definitions/connection_points"
        virtual_links:
          $ref: "#/definitions/virtual_links"
        forwarding_graphs:
          $ref: "#/definitions/forwarding_graphs"
      additionalProperties: True
  
required: 
  - vendor 
  - name
  - version
additionalProperties: False