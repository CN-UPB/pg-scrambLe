---
# tasks file for vm

- debug: msg="##### VM CREATION {{ lookup('pipe', 'date +%Y%m%d-%H%M') }}"

- name: load variables per Site, Tenant and Distro
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ lookup('env','PWD') }}/roles/{{ plat }}/vars/os_{{ pop }}_{{ proj }}_{{ distro }}.yml"
        - "{{ lookup('env','PWD') }}/group_vars/os_{{ pop }}_{{ proj }}_{{ distro }}.yml"
        - "defaults.yml"
      skip: true

#- include: "{{ lookup('env','PWD') }}/roles/vm/tasks/privkey.yml"

- include: "{{ lookup('env','PWD') }}/roles/{{ plat }}/tasks/secgrp.yml"

- include: "{{ lookup('env','PWD') }}/roles/{{ plat }}/tasks/networks.yml"

- include: "{{ lookup('env','PWD') }}/roles/vm/tasks/vm.yml"

- lineinfile:
    path: "{{ lookup('env','PWD') }}/roles/{{ plat }}/vars/main.yml"
    line: "public_ip: '{{ item.openstack.accessIPv4 }}'"
    create: yes
    state: present
  with_items: "{{ newvm.results }}"

- lineinfile:
    path: "{{ lookup('env','PWD') }}/roles/{{ plat }}/vars/main.yml"
    line: "plat_hostname: {{ item.openstack.name }}"
    create: yes
    state: present
  with_items: "{{ newvm.results }}"

# Add private key (if it does not exist, without passing regexp)
# https://relativkreativ.at/articles/how-to-use-ansibles-lineinfile-module-in-a-bulletproof-way
- lineinfile:
    path: "{{ lookup('env','PWD') }}/ansible.cfg"
    line: 'private_key_file = ~/.ssh/{{ key_name }}.pem'
  no_log: True

- lineinfile:
    path: "{{ lookup('env','PWD') }}/ansible.cfg"
    line: "inventory = inventory/{{ plat }}"

- name: create IN-MEMORY Inventory # temporary in-memory group of hosts that only persists until the end of the playbook
  add_host:
    name: "{{ item.openstack.name }}"
    groups: "{{ item.openstack.metadata.group }}"
    #groups: "{{ plat }}"
    ansible_host: "{{ item.openstack.accessIPv4 }}"
  with_items: "{{ newvm.results }}"

- name: ensures dir exists
  file:
    path: "{{ lookup('env','PWD') }}/inventory/{{ plat }}"
    state: directory
    recurse: yes
    owner: "{{ lookup('env','USER') }}"
    group: "{{ lookup('env','USER') }}"
    mode: 0755

- name: create STATIC Inventory based on a provided Template ['jinja2']
  # http://docs.ansible.com/ansible/template_module.html
  template:
    src: dynamic_inventory.j2
    dest: "{{ lookup('env','PWD') }}/inventory/{{ plat }}/hosts"

- name: Add STATIC mappings to /etc/hosts
  become: true
  template:
    src: etc_hosts.j2
    dest: /etc/hosts
    owner: "{{ lookup('env','USER') }}"
    group: "{{ lookup('env','USER') }}"
    mode: 0644

- name: WAIT the SSH port listening at the new deployed instance
  command: >
    ssh -oControlMaster=auto -oControlPersist=60s -oUserKnownHostsFile=/dev/null -oBatchMode=yes -oStrictHostKeyChecking=no -i ~/.ssh/{{ item.openstack.key_name }}.pem -l {{ vm_user }} {{ item.openstack.accessIPv4 }} true
  register: result
  until: result|success
  retries: 20
  delay: 10
  with_items: "{{ newvm.results }}"

- debug: msg="##### VM CREATED {{ lookup('pipe', 'date +%Y%m%d-%H%M') }}"

- pause:
    minutes: 2

- name: install Python 2.7 to the new deployed instance, if Xenial
  shell: >
    ssh -oControlMaster=auto -oControlPersist=60s -oUserKnownHostsFile=/dev/null -oBatchMode=yes -oStrictHostKeyChecking=no -i ~/.ssh/{{ item.openstack.key_name }}.pem -l {{ vm_user }} {{ item.openstack.accessIPv4 }} 'sudo apt-get update && sudo apt-get install python-minimal -y'
  register: result
  until: result|success
  retries: 30
  delay: 10
  with_items: "{{ newvm.results }}"
  when: distro == "xenial"

- pause:
    minutes: 2
