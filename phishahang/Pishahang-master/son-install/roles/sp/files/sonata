#!/bin/bash

start () {
  echo -e "\e[93m   _____ ____  _   _____  _________         _   _________    __"
  echo -e "\e[93m  / ___// __ \/ | / /   |/_  __/   |       / | / / ____/ |  / /"
  echo -e "\e[93m  \__ \/ / / /  |/ / /| | / / / /| |______/  |/ / /_   | | / / "
  echo -e "\e[93m ___/ / /_/ / /|  / ___ |/ / / ___ /_____/ /|  / __/   | |/ /  "
  echo -e "\e[93m/____/\____/_/ |_/_/  |_/_/ /_/  |_|    /_/ |_/_/      |___/   "
  echo ""
  echo -e "\e[93m                  SONATA-NFV is STARTING \e[0m"

if [ $(docker inspect -f {{.State.Running}} son-postgres) = false ]; then docker start son-postgres; while ! nc -z localhost 5432; do sleep 1 && echo -n .; done; fi
if [ $(docker inspect -f {{.State.Running}} son-mongo) = false ]; then docker start son-mongo; while ! nc -z localhost 27017; do sleep 1 && echo -n .; done; fi
if [ $(docker inspect -f {{.State.Running}} son-monitor-postgres) ]; then docker start son-monitor-postgres; fi
if [ $(docker inspect -f {{.State.Running}} son-monitor-influxdb) ]; then docker start son-monitor-influxdb; fi
if [ $(docker inspect -f {{.State.Running}} son-broker) ]; then docker start son-broker; while ! nc -z localhost 5672; do sleep 1 && echo -n .; done; fi
if [ $(docker inspect -f {{.State.Running}} son-keycloak) ]; then docker start son-keycloak; fi
if [ $(docker inspect -f {{.State.Running}} son-gtkpkg) ]; then docker start son-gtkpkg; fi
if [ $(docker inspect -f {{.State.Running}} son-gtksrv) ]; then docker start son-gtksrv; fi
if [ $(docker inspect -f {{.State.Running}} son-gtkcsrv) ]; then docker start son-gtkcsrv; fi
if [ $(docker inspect -f {{.State.Running}} son-gtkfnct) ]; then docker start son-gtkfnct; fi
if [ $(docker inspect -f {{.State.Running}} son-gtkrec) ]; then docker start son-gtkrec; fi
if [ $(docker inspect -f {{.State.Running}} son-gtkvim) ]; then docker start son-gtkvim; fi
if [ $(docker inspect -f {{.State.Running}} son-gtklic) ]; then docker start son-gtklic; fi
if [ $(docker inspect -f {{.State.Running}} son-gtkkpi) ]; then docker start son-gtkkpi; fi
if [ $(docker inspect -f {{.State.Running}} son-gtkrlt) ]; then docker start son-gtkkpi; fi
if [ $(docker inspect -f {{.State.Running}} son-gtkusr) ]; then docker start son-gtkusr; fi
if [ $(docker inspect -f {{.State.Running}} son-gtkapi) ]; then docker start son-gtkapi; fi
if [ $(docker inspect -f {{.State.Running}} son-gui) ]; then docker start son-gui; fi
if [ $(docker inspect -f {{.State.Running}} son-bss) ]; then docker start son-bss; fi
if [ $(docker inspect -f {{.State.Running}} son-catalogue-repos) ]; then docker start son-catalogue-repos; fi
if [ $(docker inspect -f {{.State.Running}} pluginmanager) ]; then docker start pluginmanager; sleep 10; fi
if [ $(docker inspect -f {{.State.Running}} specificmanagerregistry) ]; then docker start specificmanagerregistry; fi
if [ $(docker inspect -f {{.State.Running}} cloudservicelifecyclemanagement) ]; then docker start cloudservicelifecyclemanagement; fi
if [ $(docker inspect -f {{.State.Running}} servicelifecyclemanagement) ]; then docker start servicelifecyclemanagement; fi
if [ $(docker inspect -f {{.State.Running}} placementexecutive) ]; then docker start placementexecutive; fi
if [ $(docker inspect -f {{.State.Running}} placementplugin) ]; then docker start placementplugin; fi
if [ $(docker inspect -f {{.State.Running}} son-sp-infrabstract) ]; then docker start son-sp-infrabstract; fi
if [ $(docker inspect -f {{.State.Running}} wim-adaptor) ]; then docker start wim-adaptor; fi
if [ $(docker inspect -f {{.State.Running}} son-monitor-pushgateway) ]; then docker start son-monitor-pushgateway; fi
if [ $(docker inspect -f {{.State.Running}} son-monitor-prometheus) ]; then docker start son-monitor-prometheus; fi
if [ $(docker inspect -f {{.State.Running}} son-monitor-manager) ]; then docker start son-monitor-manager; fi
if [ $(docker inspect -f {{.State.Running}} son-monitor-probe) ]; then docker start son-monitor-probe; fi
if [ $(docker inspect -f {{.State.Running}} son-sec-gw) ]; then docker start son-sec-gw; fi
docker ps -a --filter "status=running" --format "{{.Names}}" | awk '{ print "[" "\033[32m UP \033[0m""]", "\011" $1 ;}' | sort
docker ps -a -f "status=created" -f "status=dead" -f "status=restarting" -f "status=removing" -f "status=paused" -f "status=exited" --format "{{.Names}}" | awk '{ print "[" "\033[31mDOWN\033[0m""]", "\011" $1 ;}'
}

status () {
  echo -e "\e[93m   _____ ____  _   _____  _________         _   _________    __"
  echo -e "\e[93m  / ___// __ \/ | / /   |/_  __/   |       / | / / ____/ |  / /"
  echo -e "\e[93m  \__ \/ / / /  |/ / /| | / / / /| |______/  |/ / /_   | | / / "
  echo -e "\e[93m ___/ / /_/ / /|  / ___ |/ / / ___ /_____/ /|  / __/   | |/ /  "
  echo -e "\e[93m/____/\____/_/ |_/_/  |_/_/ /_/  |_|    /_/ |_/_/      |___/   "
  echo ""
  echo -e "\e[93m                  SONATA-NFV SP STATUS \e[0m"

docker ps -a --filter "status=running" --format "{{.Names}}" | awk '{ print "[" "\033[32m UP \033[0m""]", "\011" $1 ;}' | sort
docker ps -a -f "status=created" -f "status=dead" -f "status=restarting" -f "status=removing" -f "status=paused" -f "status=exited" --format "{{.Names}}" | awk '{ print "[" "\033[31mDOWN\033[0m""]", "\011" $1 ;}'
}

stop () {
  echo -e "\e[93m   _____ ____  _   _____  _________         _   _________    __"
  echo -e "\e[93m  / ___// __ \/ | / /   |/_  __/   |       / | / / ____/ |  / /"
  echo -e "\e[93m  \__ \/ / / /  |/ / /| | / / / /| |______/  |/ / /_   | | / / "
  echo -e "\e[93m ___/ / /_/ / /|  / ___ |/ / / ___ /_____/ /|  / __/   | |/ /  "
  echo -e "\e[93m/____/\____/_/ |_/_/  |_/_/ /_/  |_|    /_/ |_/_/      |___/   "
  echo ""
  echo -e "\e[93m                  SONATA-NFV is STOPPING \e[0m"

docker stop -t 5 son-postgres son-mongo son-monitor-postgres son-monitor-influxdb
docker stop -t 1 son-broker son-keycloak son-gui son-bss son-gtkpkg son-gtksrv son-gtkcsrv son-gtkfnct son-gtkrec son-gtkvim son-gtklic son-gtkkpi son-gtkusr son-gtkapi son-catalogue-repos pluginmanager specificmanagerregistry servicelifecyclemanagement placementexecutive placementplugin cloudservicelifecyclemanagement son-sp-infrabstract wim-adaptor son-monitor-pushgateway son-monitor-prometheus son-monitor-manager son-monitor-probe son-sec-gw
}

case $1 in
  start)
    start
    ;;
  status)
    status
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|status}"
esac
