---
# tasks file for mistral

- include_vars: "{{ lookup('env','PWD') }}/group_vars/os_{{ pop }}_{{ proj }}_{{ distro }}.yml"

- name: Docker User Defined Network (MISTRAL)
  shell: 'docker network create --driver=bridge \
--subnet=172.20.3.0/24 --gateway=172.20.3.1 \
--ip-range=172.20.3.128/25 "{{ docker_network_name }}"'

- name: deploy MYSQL as a Docker container (official image from Docker Hub) 
  docker_container:
    name: "mistral-mysql"
    image: "mysql"
    state: started
    env:
      MYSQL_ROOT_PASSWORD: "{{ upassword }}"
    network_mode: bridge
    networks:
      - name: "{{ docker_network_name }}"
        aliases:
          - son-mistral-mysql
    published_ports: 3306:3306
    etc_hosts:
      mysql: "{{ ansible_default_ipv4.address }}"
    restart_policy: unless-stopped
    volumes:
      - /var/log/sonata/son-mistral-mysql:/var/log/son-mistral-mysql
    log_driver: syslog

- wait_for: host=0.0.0.0 port=3306 timeout=30 delay=10 state=started

- file:
    path: /tmp/mistral
    state: directory
    recurse: yes
    owner: "{{ lookup('env','USER') }}"
    group: "{{ lookup('env','USER') }}"
    mode: 0755

- name: download MISTRAL tarball
  get_url:
    url: https://tarballs.openstack.org/mistral/images/mistral-docker.tar.gz
    dest: /tmp/mistral

- command: gunzip -f /tmp/mistral/mistral-docker.tar.gz

- name: Load image from archive and push to a private registry
  docker_image:
    name: mistral-all
    #name: registry.sonata-nfv.eu:5000/sonatanfv/mistral-all
    #tag: v1
    #push: yes
    load_path: /tmp/mistral/mistral-docker.tar

- name: deploy MISTRAL as a Docker container
  docker_container:
    name: mistral
    image: mistral-all
    state: started
    env:
      broker_host: amqp://guest:guest@{{ ansible_default_ipv4.address }}:5672/%2F
      broker_name: son-broker,broker
    network_mode: bridge
    networks:
      - name: "{{ docker_network_name }}"
        aliases:
          - son-mistral-mysql
        links:
          - "mistral-mysql:mysql"
    published_ports: 8989:8989
    restart_policy: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock"
      - /var/log/sonata/son-mistral:/var/log/son-mistral
    log_driver: syslog

- wait_for: host=0.0.0.0 port=8989 timeout=30 delay=10 state=started

- name: wait for the mistral-all container to start (sleep 10)
  pause:
    seconds: 10

- name: create Mistral database
  shell: docker exec mistral-mysql mysql -u root -p'{{ upassword }}' -e "CREATE DATABASE mistral; USE mistral; GRANT ALL ON mistral.* TO 'root'@'%' IDENTIFIED BY '{{ upassword }}'"

- name: install MySQL client to Mistral container
  shell: docker exec mistral apt-get install -y libmysqlclient-dev

- name: install mysql-python via PIP to Mistral container
  shell: docker exec mistral pip install mysql-python

- name: create a safe copy of mistral.conf
  shell: docker exec mistral cp mistral.conf mistral.conf.orig

- local_action: command cp "{{ role_path }}/files/initialise.py" /var/log/sonata/son-mistral
- name: initialise
  shell: docker exec mistral "python -c /var/log/son-mistral/initialise.py"

- name: sync database and set predefined actions
  shell: docker exec mistral python /opt/stack/mistral/tools/sync_db.py --config-file /home/mistral/mistral.conf

- name: restart Mistral service
  shell: docker restart mistral

- name: install Mistral client to Xenial
  apt: name=python3-mistralclient state=present
  when: ansible_distribution_release == "xenial"

- name: install Mistral client to Trusty
  apt: name=python-mistralclient state=present
  when: ansible_distribution_release == "trusty"

#- name: install Mistral client to Centos 7
#  apt: name=python-mistralclient state=present
#  when: ansible_distribution_release == "Core"
