#
# This playbook follows the manual install guide for CentOS 7 referenced [here:]
# (https://kubernetes.io/docs/getting-started-guides/centos/centos_manual_config/)
#

#  Disable iptables on each node to avoid conflicts with Docker iptables rules
- name: disable SELinux
  selinux:
    state: disabled
- name: check if service exists
  shell: "if systemctl list-unit-files | grep -q iptables-services;   then echo true;   else echo false; fi;"
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"
  register: service_exists
- service: name=iptables-services state=stopped enabled=false
  when: service_exists.rc != 0
- name: check if service exists
  shell: "if systemctl list-unit-files | grep -q firewalld;   then echo true;   else echo false; fi;"
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"
  register: service_exists
- service: name=firewalld state=stopped enabled=false
  when: service_exists.rc != 0

- name: install NTP to assure time sync between Nodes and Master
  yum: name=ntp state=present

- service: name=ntpd state=started enabled=yes

- name: set Kube Master configuration
  copy: src=/etc/hosts dest=/etc/hosts owner=root group=root mode=0644

# Install Kubernetes and ETCD
- name: add Docker common release to the YUM list of repositories
  yum_repository:
    name: virt7-docker-common-release
    description: virt7 Docker common release
    baseurl: http://cbs.centos.org/repos/virt7-docker-common-release/x86_64/os/

- name:  upgrade all packages to the latest version
  become: true
  yum: name='*' state=latest update_cache=yes

- name: Install Kubernetes and etcd
  yum: name={{ item }} state=present update_cache=yes enablerepo=virt7-docker-common-release
  with_items:
  - kubernetes
  - etcd
  - flannel

- name: set Kube Master configuration
  copy: src=kube.conf dest=/etc/kubernetes/config owner=root group=root mode=0644

- name: set Kube ETDC configuration
  copy: src=etcd.conf dest=/etc/etcd/etcd.conf owner=root group=root mode=0644

- name: set Kube API Server configuration
  copy: src=apiserver dest=/etc/kubernetes/apiserver owner=root group=root mode=0644

- name: starting Kube Master services
  service: name={{ item }} state=started enabled=true
  with_items:
  - etcd

# Define flannel network configuration in etcd. This configuration will be pulled by flannel service on minions
- command: etcdctl mkdir /kube/network
- shell: 'etcdctl mk /kube/network/config "{ \"Network\": \"172.30.0.0/16\", \"SubnetLen\": 24, \"Backend\": { \"Type\": \"vxlan\" } }"'
  notify:
    restart etcd

- name: configure flannel to overlay Docker network
  copy: src=flanneld dest=/etc/sysconfig/flanneld owner=root group=root mode=0644


- name: starting Kube Master services
  service: name={{ item }} state=started enabled=true
  with_items:
# - etcd
  - kube-apiserver
  - kube-controller-manager
  - kube-scheduler
  - flanneld

- name: install Kube client
  get_url:
    url: http://storage.googleapis.com/kubernetes-release/release/v1.4.9/bin/linux/amd64/kubectl
    dest: /usr/local/bin
    mode: 0755

- name: install Cockpit and Cockpit-Kubernetes
  yum: name={{ item }} state=present 
  with_items:
  - cockpit
  - cockpit-kubernetes

#- name: open FW port 9090 
#  shell: firewall-cmd --permanent --zone=public --add-port=9090/tcp && firewall-cmd --reload

- name: start cockpit web application
  service: name=cockpit.socket state=started enabled=yes

