{
  "clientId" : "gtkapi",
  "resource_owner_name" : "gatekeeper_api",
  "role" : "realm-admin",
  "description" : "This is a global rule set to provide authorization permissions to the gtkapi endpoints",
  "resources" : [
    {
      "resource_name": "services",
      "description": null,
      "type": "resource",
      "URI": "services",
      "owner" : "catalogue",
      "associated_permissions": [
        {
          "name": "read",
          "description": "Read a catalogue service resource",
          "apply_policy": ["developer", "son-slm"],
          "action": "GET"
        },
        {
          "name": "write",
          "description": "Store a catalogue service resource",
          "apply_policy": ["developer", "owner"],
          "action": "POST"
        },
        {
          "name": "update",
          "description": "Update a catalogue service resource",
          "apply_policy": ["developer", "owner"],
          "action": "PUT"
        },
        {
          "name": "delete",
          "description": "Remove a catalogue service resource",
          "apply_policy": ["developer", "owner"],
          "action": "DELETE"
        }
      ]
    },
    {
      "resource_name": "functions",
      "description": null,
      "type": "resource",
      "URI": "functions",
      "owner" : "catalogue",
      "associated_permissions": [
        {
          "name": "read",
          "description": "Read a catalogue function resource",
          "apply_policy": ["developer", "son-slm"],
          "action": "GET"
        },
        {
          "name": "write",
          "description": "Store a catalogue function resource",
          "apply_policy": ["developer"],
          "action": "POST"
        },
        {
          "name": "update",
          "description": "Update a catalogue function resource",
          "apply_policy": ["developer"],
          "action": "PUT"
        },
        {
          "name": "delete",
          "description": "Remove a catalogue function resource",
          "apply_policy": ["developer"],
          "action": "DELETE"
        }
      ]
    },
    {
      "resource_name": "packages",
      "description": null,
      "type": "resource",
      "URI": "packages",
      "owner" : "catalogue",
      "associated_permissions": [
        {
          "name": "read",
          "description": "Read or download a catalogue package resource",
          "apply_policy": ["developer", "son-slm"],
          "action": "GET"
        },
        {
          "name": "write",
          "description": "Submit a catalogue package resource",
          "apply_policy": ["developer"],
          "action": "POST"
        },
        {
          "name": "update",
          "description": "Update a catalogue package resource",
          "apply_policy": ["developer"],
          "action": "PUT"
        },
        {
          "name": "delete",
          "description": "Remove a catalogue package resource",
          "apply_policy": ["developer"],
          "action": "DELETE"
        }
      ]
    },
    {
      "resource_name": "requests",
      "description": null,
      "type": "resource",
      "URI": "requests",
      "owner" : "repositories",
      "associated_permissions": [
        {
          "name": "read",
          "description": "Read a repositories request resource",
          "apply_policy": ["customer", "son-slm"],
          "action": "GET"
        },
        {
          "name": "write",
          "description": "Submit a repositories request resource",
          "apply_policy": ["customer"],
          "action": "POST"
        },
        {
          "name": "update",
          "description": "Update a repositories request resource",
          "apply_policy": ["customer"],
          "action": "PUT"
        },
        {
          "name": "delete",
          "description": "Remove a repositories request resource",
          "apply_policy": ["customer"],
          "action": "DELETE"
        }
      ]
    },
    {
      "resource_name": "records",
      "description": null,
      "type": "resource",
      "URI": "records",
      "owner" : "repositories",
      "associated_permissions": [
        {
          "name": "read",
          "description": "Read a repositories record resource",
          "apply_policy": ["customer", "son-slm"],
          "action": "GET"
        },
        {
          "name": "write",
          "description": "Submit a repositories record resource",
          "apply_policy": ["customer"],
          "action": "POST"
        },
        {
          "name": "update",
          "description": "Update a repositories record resource",
          "apply_policy": ["customer"],
          "action": "PUT"
        },
        {
          "name": "delete",
          "description": "Remove a repositories record resource",
          "apply_policy": ["customer"],
          "action": "DELETE"
        }
      ]
    },
    {
      "resource_name": "vim",
      "description": null,
      "type": "resource",
      "URI": "vims",
      "owner" : "vim",
      "associated_permissions": [
        {
          "name": "read",
          "description": "Read a vims vim resource",
          "apply_policy": [],
          "action": "GET"
        },
        {
          "name": "write",
          "description": "Submit a vims vim resource",
          "apply_policy": [],
          "action": "POST"
        }
      ]
    },
    {
      "resource_name": "wim",
      "description": null,
      "type": "resource",
      "URI": "wims",
      "owner" : "wim",
      "associated_permissions": [
        {
          "name": "read",
          "description": "Read a wims wim resource",
          "apply_policy": [],
          "action": "GET"
        },
        {
          "name": "write",
          "description": "Submit a wims wim resource",
          "apply_policy": [],
          "action": "POST"
        }
      ]
    },
    {
      "resource_name": "kpi",
      "description": null,
      "type": "resource",
      "URI": "kpis",
      "owner" : "kpi",
      "associated_permissions": [
        {
          "name": "read",
          "description": "Read a kpis resource",
          "apply_policy": [],
          "action": "GET"
        },
        {
          "name": "update",
          "description": "Update a kpis resource",
          "apply_policy": [],
          "action": "PUT"
        }
      ]
    },
    {
      "resource_name": "licence",
      "description": null,
      "type": "resource",
      "URI": "licences",
      "owner" : "licence_manager",
      "associated_permissions": [
        {
          "name": "read",
          "description": "Read a licence resource",
          "apply_policy": [],
          "action": "GET"
        },
        {
          "name": "write",
          "description": "Submit a licence resource",
          "apply_policy": [],
          "action": "POST"
        }
      ]
    },
    {
      "resource_name": "metrics",
      "description": null,
      "type": "resource",
      "URI": "metrics",
      "owner" : "metrics_controller",
      "associated_permissions": [
        {
          "name": "read",
          "description": "Read a metrics resource",
          "apply_policy": [],
          "action": "GET"
        }
      ]
    },
    {
      "resource_name": "users",
      "description": null,
      "type": "resource",
      "URI": "users",
      "owner" : "users_controller",
      "associated_permissions": [
        {
          "name": "read",
          "description": "Read a user resource",
          "apply_policy": [],
          "action": "GET"
        },
        {
          "name": "write",
          "description": "Submit a new user resource",
          "apply_policy": [],
          "action": "POST"
        },
        {
          "name": "update",
          "description": "Update a user resource",
          "apply_policy": ["admin", "developer", "customer"],
          "action": "PUT"
        },
        {
          "name": "user-public-key",
          "description": "Update user public-key resource",
          "apply_policy": ["admin", "developer"],
          "action": "PATCH"
        }
      ]
    },
    {
      "resource_name": "micro_services",
      "description": null,
      "type": "resource",
      "URI": "micro-services",
      "owner" : "micro_services_controller",
      "associated_permissions": [
        {
          "name": "read",
          "description": "Read a user resource",
          "apply_policy": [],
          "action": "GET"
        },
        {
          "name": "write",
          "description": "Submit a new user resource",
          "apply_policy": [],
          "action": "POST"
        }
      ]
    }
  ],
  "policies": [
    {
      "name": "developer",
      "description": "SONATA Realm role authorized to request the resource",
      "type": "role",
      "logic": "positive",
      "scopes": null
    },
    {
      "name": "customer",
      "description": "SONATA Realm role authorized to request the resource",
      "type": "role",
      "logic": "positive",
      "scopes": null
    },
    {
      "name": "admin",
      "description": "SONATA Realm role authorized to request the resource",
      "type": "role",
      "logic": "positive",
      "scopes": null
    },
    {
      "name": "son-slm",
      "description": "SONATA Realm role authorized to request the resource",
      "type": "role",
      "logic": "positive",
      "scopes": null
    },
    {
      "name": "owner",
      "description": "SONATA Realm user owner of the resource",
      "type": "user",
      "logic": "positive",
      "scopes": null
    }
  ]
}