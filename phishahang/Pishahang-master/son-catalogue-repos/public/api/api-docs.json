{
  "swagger": "2.0",
  "info": {
    "title": "SON-CATALOGUE-REPOS",
    "description": "#### SP Catalogue - Repositories Documentation\nThis is the documentation for the API implementation of the SON-CATALOGUE-REPOS on the Sonata Service Platform (SP) for virtual network services, functions, packages and records.\nThe API allows different methods to access and operate with the different Catalogues and the Repositories.\nFeel free to make a path or an operation and use **Try Operation** to test it.\n",
    "version": "2.0.0",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "0.0.0.0:4011",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json",
    "text/xml"
  ],
  "produces": [
    "application/json",
    "application/x-yaml",
    "text/html"
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Management",
        "description": "This method is intended to provide information about the Catalogue's API and management.\n",
        "tags": [
          "Management"
        ],
        "responses": {
          "200": {
            "description": "Get all available interfaces in JSON or YAML format."
          }
        }
      }
    },
    "/log": {
      "get": {
        "summary": "Management",
        "tags": [
          "Management"
        ],
        "responses": {
          "200": {
            "description": "Management method to get log of catalogue remotely."
          }
        }
      }
    },
    "/catalogues": {
      "get": {
        "summary": "Catalogues",
        "tags": [
          "Catalogues"
        ],
        "responses": {
          "200": {
            "description": "Management method to get available interfaces from Catalogue."
          }
        }
      }
    },
    "/catalogues/network-services": {
      "get": {
        "summary": "Network Services",
        "description": "Retrieve all service descriptors stored in the catalogue.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique identifier for the network-service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "vendor",
            "in": "query",
            "description": "Identifier for the network-service vendor.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Identifier for the network-service name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Identifier for the network-service version.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "An array of service descriptors",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ns"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "Submit a new service descriptor"
          }
        }
      },
      "put": {
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "Update a service descriptor."
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "Delete a service descriptor."
          }
        }
      }
    },
    "/catalogues/network-services/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID.",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "Network Services",
        "description": "Retrieve single service descriptor stored in the catalogue.",
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "Get identified service descriptor in JSON or YAML format.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ns"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "Update a service descriptor."
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "Delete a service descriptor."
          }
        }
      }
    },
    "/catalogues/vnfs": {
      "get": {
        "summary": "Virtual Network Functions",
        "description": "Retrieve all function descriptors stored in the catalogue.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique identifier for the function.",
            "required": false,
            "type": "string"
          },
          {
            "name": "vendor",
            "in": "query",
            "description": "Identifier for the function vendor.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Identifier for the function name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Identifier for the function version.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "An array of function descriptors.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vnfs"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "Submit a new function descriptor"
          }
        }
      },
      "put": {
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "Update a function descriptor."
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "Delete a function descriptor."
          }
        }
      }
    },
    "/catalogues/vnfs/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID.",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "Functions",
        "description": "Retrieve single function descriptor stored in the catalogue.",
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "Get identified function descriptor in JSON or YAML format.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vnfs"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "Update a function descriptor."
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "Delete a function descriptor."
          }
        }
      }
    },
    "/catalogues/packages": {
      "get": {
        "summary": "Package descriptors",
        "description": "Retrieve all package descriptors stored in the catalogue.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique identifier for the package.",
            "required": false,
            "type": "string"
          },
          {
            "name": "vendor",
            "in": "query",
            "description": "Identifier for the package vendor.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Identifier for the package name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Identifier for the package version.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "An array of package descriptors.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pd"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "Submit a new package descriptor"
          }
        }
      },
      "put": {
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "Update a package descriptor."
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "Delete a package descriptor."
          }
        }
      }
    },
    "/catalogues/packages/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID.",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "Packages",
        "description": "Retrieve single package descriptor stored in the catalogue.",
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "Get identified package descriptor in JSON or YAML format.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pd"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "Update a package descriptor."
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "Delete a package descriptor."
          }
        }
      }
    },
    "/catalogues/api/v2/network-services": {
      "get": {
        "summary": "Network Services",
        "description": "Retrieve all service descriptors stored in the catalogue.",
        "operationId": "listNS",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique identifier for the network-service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "vendor",
            "in": "query",
            "description": "Identifier for the network-service vendor.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Identifier for the network-service name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Identifier for the network-service version.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "An array of service descriptors",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ns"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "Submit a new service descriptor"
          }
        }
      },
      "put": {
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "Update a service descriptor."
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "Delete a service descriptor."
          }
        }
      }
    },
    "/catalogues/api/v2/network-services/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID.",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "Network Services",
        "description": "Retrieve single service descriptor stored in the catalogue.",
        "operationId": "getNSById",
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "Get identified service descriptor in JSON or YAML format.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ns"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "Update a service descriptor."
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogues/Services"
        ],
        "responses": {
          "200": {
            "description": "Delete a service descriptor."
          }
        }
      }
    },
    "/catalogues/api/v2/vnfs": {
      "get": {
        "summary": "Virtual Network Functions",
        "description": "Retrieve all function descriptors stored in the catalogue.",
        "operationId": "listVNF",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique identifier for the function.",
            "required": false,
            "type": "string"
          },
          {
            "name": "vendor",
            "in": "query",
            "description": "Identifier for the function vendor.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Identifier for the function name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Identifier for the function version.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "An array of function descriptors.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vnfs"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "Submit a new function descriptor"
          }
        }
      },
      "put": {
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "Update a function descriptor."
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "Delete a function descriptor."
          }
        }
      }
    },
    "/catalogues/api/v2/vnfs/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID.",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "Functions",
        "description": "Retrieve single function descriptor stored in the catalogue.",
        "operationId": "GetVNFById",
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "Get identified function descriptor in JSON or YAML format.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vnfs"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "Update a function descriptor."
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogues/Functions"
        ],
        "responses": {
          "200": {
            "description": "Delete a function descriptor."
          }
        }
      }
    },
    "/catalogues/api/v2/packages": {
      "get": {
        "summary": "Package descriptors",
        "description": "Retrieve all package descriptors stored in the catalogue.",
        "operationId": "listPackage",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique identifier for the package.",
            "required": false,
            "type": "string"
          },
          {
            "name": "vendor",
            "in": "query",
            "description": "Identifier for the package vendor.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Identifier for the package name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Identifier for the package version.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "An array of package descriptors.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pd"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "Submit a new package descriptor"
          }
        }
      },
      "put": {
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "Update a package descriptor."
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "Delete a package descriptor."
          }
        }
      }
    },
    "/catalogues/api/v2/packages/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID.",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "Packages",
        "description": "Retrieve single package descriptor stored in the catalogue.",
        "operationId": "GetPackageById",
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "Get identified package descriptor in JSON or YAML format.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pd"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "Update a package descriptor."
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogues/Packages"
        ],
        "responses": {
          "200": {
            "description": "Delete a package descriptor."
          }
        }
      }
    },
    "/catalogues/api/v2/son-packages": {
      "get": {
        "summary": "Sonata package files son-packages",
        "description": "Retrieve all package descriptors stored in the catalogue.",
        "operationId": "listSonPackage",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique identifier for the son-package.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filename",
            "in": "query",
            "description": "Identifier for the son-package name.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Catalogues/SonPackages"
        ],
        "responses": {
          "200": {
            "description": "An array of package file containers.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SONP"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Catalogues/SonPackages"
        ],
        "responses": {
          "200": {
            "description": "Submit a new son-package file"
          }
        }
      }
    },
    "/catalogues/api/v2/son-packages/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID.",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "Get sonata Packages files",
        "description": "Retrieve single son-package file stored in the catalogue.",
        "operationId": "GetSonPackageById",
        "tags": [
          "Catalogues/SonPackages"
        ],
        "responses": {
          "200": {
            "description": "Get son-package file binary format.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SONP"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogues/SonPackages"
        ],
        "responses": {
          "200": {
            "description": "Delete a son-package file."
          }
        }
      }
    },
    "/records": {
      "get": {
        "summary": "Records",
        "tags": [
          "Records"
        ],
        "responses": {
          "200": {
            "description": "Management method to get log of catalogue remotely."
          }
        }
      }
    },
    "/records/nsr": {
      "get": {
        "summary": "Management",
        "tags": [
          "Records/NSR"
        ],
        "responses": {
          "200": {
            "description": "Management method to get log of catalogue remotely.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Nsr"
              }
            }
          }
        }
      }
    },
    "/records/vnfr": {
      "get": {
        "summary": "Management",
        "tags": [
          "Records/VNFR"
        ],
        "responses": {
          "200": {
            "description": "Management method to get log of catalogue remotely.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vnfr"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    },
    "Ns": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the network-service."
        },
        "vendor": {
          "type": "string",
          "description": "Identifier for the network-service vendor."
        },
        "name": {
          "type": "string",
          "description": "Identifier for the network-service name."
        },
        "version": {
          "type": "string",
          "description": "Identifier for the network-service version."
        }
      }
    },
    "Nsr": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the network-service."
        },
        "vendor": {
          "type": "string",
          "description": "Identifier for the network-service vendor."
        },
        "name": {
          "type": "string",
          "description": "Identifier for the network-service name."
        },
        "version": {
          "type": "string",
          "description": "Identifier for the network-service version."
        }
      }
    },
    "Vnfs": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the function."
        },
        "vendor": {
          "type": "string",
          "description": "Unique identifier for the function vendor."
        },
        "name": {
          "type": "string",
          "description": "Unique identifier for the function name."
        },
        "version": {
          "type": "string",
          "description": "Unique identifier for the function version."
        }
      }
    },
    "Vnfr": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the function."
        },
        "vendor": {
          "type": "string",
          "description": "Unique identifier for the function vendor."
        },
        "name": {
          "type": "string",
          "description": "Unique identifier for the function name."
        },
        "version": {
          "type": "string",
          "description": "Unique identifier for the function version."
        }
      }
    },
    "Pd": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the function."
        },
        "vendor": {
          "type": "string",
          "description": "Unique identifier for the function vendor."
        },
        "name": {
          "type": "string",
          "description": "Unique identifier for the function name."
        },
        "version": {
          "type": "string",
          "description": "Unique identifier for the function version."
        }
      }
    },
    "SONP": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the function."
        },
        "filename": {
          "type": "string",
          "description": "Unique identifier for the function name."
        }
      }
    }
  }
}